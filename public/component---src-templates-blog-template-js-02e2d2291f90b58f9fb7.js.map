{"version":3,"sources":["webpack:///./src/templates/blogTemplate.module.css","webpack:///./src/templates/blogTemplate.js"],"names":["module","exports","query","Blog","data","post","title","publishedDate","auteur","json","content","options","renderNode","node","target","fields","file","contentType","rel","href","url","alt","src","titleD","className","primary","styles","delimiter","documentToReactComponents","retour","to"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,UAAY,wCAAwC,OAAS,uC,kCCD/E,uJAyEaC,EAAK,aAmBHC,UAnFF,SAAC,GAAc,IAAD,IAAXC,KAMLC,KAJPC,EAFuB,EAEvBA,MACAC,EAHuB,EAGvBA,cACAC,EAJuB,EAIvBA,OACWC,EALY,EAKvBC,QAAWD,KAGPE,EAAU,CACdC,WAAY,CACV,uBAAwB,SAAAC,GAEtB,OACE,6BAEE,oBADCA,EAAKT,KAAKU,OAAOC,OAAOC,KAAK,SAASC,YAErC,uBACEH,OAAO,SAASI,IAAI,sBACpBC,KAAMN,EAAKT,KAAKU,OAAOC,OAAOC,KAAK,SAASI,KAE3CP,EAAKT,KAAKU,OAAOC,OAAOT,MAAM,UAGjC,yBACEe,IAAKR,EAAKT,KAAKU,OAAOC,OAAOT,MAAM,SACnCgB,IAAKT,EAAKT,KAAKU,OAAOC,OAAOC,KAAK,SAASI,UAQzD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,OAAQjB,IACb,yBAAKkB,UAAU,+BACb,6BAASA,UAAU,yDACnB,kBAAC,IAAD,CAAalB,MAAOA,EAAOmB,SAAO,IAChC,yBAAKD,UAAU,qBACb,0BAAMA,UAAU,oBAAhB,OACM,gCAAShB,IAEf,0BAAMgB,UAAU,mCAAmCjB,IAErD,yBAAKiB,UAAWE,IAAOC,YAEvB,6BAASH,UAAWE,IAAOhB,SAAUkB,oCAA0BnB,EAAME,IACrE,6BACA,yBAAKa,UAAWE,IAAOC,YACvB,6BAEA,yBAAKH,UAAU,iBACb,kBAAC,OAAD,CAAMA,UAAWE,IAAOG,OAAQC,GAAG,UAAnC,oBAIF","file":"component---src-templates-blog-template-js-02e2d2291f90b58f9fb7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delimiter\":\"blogTemplate-module--delimiter--1DTDK\",\"retour\":\"blogTemplate-module--retour--1_bWv\"};","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\"\r\nimport TitleStyled from \"../components/styledComponents/titleStyled\"\r\nimport styles from \"./blogTemplate.module.css\"\r\nimport SEO from \"../components/seo/seo\"\r\n\r\n\r\nconst Blog = ({ data }) => {\r\n  const {\r\n    title,\r\n    publishedDate,\r\n    auteur,\r\n    content: { json },\r\n  } = data.post;\r\n\r\n  const options = {\r\n    renderNode: {\r\n      \"embedded-asset-block\": node => {\r\n\r\n        return (\r\n          <div>\r\n            {node.data.target.fields.file[\"en-US\"].contentType ===\r\n            \"application/pdf\" ? (\r\n              <a\r\n                target=\"_blank\" rel=\"noopener noreferrer\"\r\n                href={node.data.target.fields.file[\"en-US\"].url}\r\n              >\r\n                {node.data.target.fields.title[\"en-US\"]}\r\n              </a>\r\n            ) : (\r\n              <img\r\n                alt={node.data.target.fields.title[\"en-US\"]}\r\n                src={node.data.target.fields.file[\"en-US\"].url}\r\n              />\r\n            )}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n  }\r\n  return (\r\n    <Layout>\r\n      <SEO titleD={title} />\r\n      <div className=\"container has-text-centered\">\r\n        <article className=\"container is-fluid has-text-left column is-two-thirds\">\r\n        <TitleStyled title={title} primary />\r\n          <div className=\"columns is-mobile\">\r\n            <span className=\"is-italic column\">\r\n              Par <strong>{auteur}</strong>\r\n            </span>\r\n            <span className=\"is-italic column has-text-right\">{publishedDate}</span>\r\n          </div>\r\n          <div className={styles.delimiter} />\r\n\r\n          <content className={styles.content}>{documentToReactComponents(json, options)}</content>\r\n          <br />\r\n          <div className={styles.delimiter} />\r\n          <br />\r\n\r\n          <div className=\"has-text-left\">\r\n            <Link className={styles.retour} to=\"./news\">\r\n             Retour aux news\r\n            </Link>\r\n          </div>\r\n          <br />\r\n        </article>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query getPost($slug: String, $next:String) {\r\n    post: contentfulBlogPost(slug: { eq: $slug }) {\r\n      id\r\n      slug\r\n      publishedDate(formatString: \"dddd DD MMMM YYYY\", locale: \"fr\")\r\n      auteur\r\n      title\r\n      content {\r\n        json\r\n      }\r\n    }\r\n    nextPost: contentfulBlogPost(slug: { eq: $next }) {\r\n      id\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\nexport default Blog\r\n"],"sourceRoot":""}